import*as e from"React";var t={d:(e,s)=>{for(var a in s)t.o(s,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:s[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},s={};t.d(s,{A:()=>l});const a=(i={default:()=>e.default},n={},t.d(n,i),n),r=({data:e})=>a.default.createElement("div",null,a.default.createElement("h1",null,"Battle Results"),e.common.teams.map(((e,t)=>((e,t)=>{const{scores:s,players:r}=e;return a.default.createElement("div",{key:t},a.default.createElement("h2",null,"Team ",t+1," - Score: ",s),a.default.createElement("table",null,a.default.createElement("thead",null,a.default.createElement("tr",null,a.default.createElement("th",null,"User Name"),a.default.createElement("th",null,"Role"),a.default.createElement("th",null,"Level"),a.default.createElement("th",null,"Team"),a.default.createElement("th",null,"Damage"),a.default.createElement("th",null,"Kills"),a.default.createElement("th",null,"Deaths"),a.default.createElement("th",null,"Healing"))),a.default.createElement("tbody",null,Object.entries(r).map((([e,t])=>((e,t)=>{const{user_name:s,role:r,level:i,team:n}=e.player_info,{damage:h,frags:p,deaths:l,heal:u}=e.stats;return a.default.createElement("tr",{key:t},a.default.createElement("td",null,s),a.default.createElement("td",null,r),a.default.createElement("td",null,i),a.default.createElement("td",null,n),a.default.createElement("td",null,h),a.default.createElement("td",null,p),a.default.createElement("td",null,l),a.default.createElement("td",null,u))})(t,e))))))})(e,t))));var i,n;class h{input;pos;constructor(e){this.input=e,this.pos=0}parse(){return this.parseValue()}parseValue(){if(this.skipWhitespace(),/^[A-Z][a-zA-Z0-9_]*\s*\(/.test(this.input.slice(this.pos)))return this.parseConstructor();switch(this.peek()){case"b":if('"'===this.peek(1)||"'"===this.peek(1))return this.parseBString();break;case'"':case"'":return this.parseQuotedString();case"[":return this.parseArray();case"{":return this.parseDict();case"<":return this.parseEnum();case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case"-":return this.parseNumber();case"F":if(this.matchKeyword("False"))return!1;break;case"T":if(this.matchKeyword("True"))return!0}if(/[a-zA-Z_]/.test(this.peek()))return this.parseIdentifier();throw new Error(`Unexpected character '${this.peek()}' at position ${this.pos}`)}parseConstructor(){let e="";for(;this.pos<this.input.length&&/[A-Za-z0-9_]/.test(this.peek());)e+=this.input[this.pos++];this.skipWhitespace(),this.expect("(");const t=this.parseValue();return this.skipWhitespace(),this.expect(")"),{type:e,value:t}}parseEnum(){this.expect("<");const e=this.parseIdentifier();this.expect(".");const t=this.parseIdentifier();this.expect(":"),this.skipWhitespace();const s=this.parseValue();return this.expect(">"),{type:e,variant:t,value:s}}parseBString(){this.expect("b");const e=this.peek();this.pos++;let t=this.input.substr(this.pos).match("^.*?(?<!\\\\)(?="+e+"[,\\]\\}\\)])");if(!t)throw new Error(`Can't find end of b-string at ${this.pos}`);return this.pos+=t[0].length+1,new Uint8Array(t[0].split("").map((e=>e.charCodeAt(0))))}parseQuotedString(){const e=this.peek();this.pos++;let t="";for(;this.pos<this.input.length;){if(this.peek()===e&&"\\"!==this.input[this.pos-1]){this.pos++;break}if("\\"===this.peek())switch(this.pos++,this.peek()){case"n":t+="\n";break;case"r":t+="\r";break;case"t":t+="\t";break;case"\\":t+="\\";break;case'"':t+='"';break;case"'":t+="'";break;default:t+=this.peek()}else t+=this.input[this.pos];this.pos++}return t}parseDict(){this.expect("{");const e={};for(;this.pos<this.input.length;){if(this.skipWhitespace(),"}"===this.peek()){this.pos++;break}let t;t="'"===this.peek()||'"'===this.peek()?this.parseQuotedString():this.parseIdentifier(),this.skipWhitespace(),this.expect(":"),this.skipWhitespace();const s=this.parseValue();e[t]=s,this.skipWhitespace(),","===this.peek()&&this.pos++}return e}parseArray(){this.expect("[");const e=[];for(;this.pos<this.input.length;){if(this.skipWhitespace(),"]"===this.peek()){this.pos++;break}e.push(this.parseValue()),this.skipWhitespace(),","===this.peek()&&this.pos++}return e}parseNumber(){let e="";for(;this.pos<this.input.length&&/[-0-9.]/.test(this.peek());)e+=this.input[this.pos++];return Number(e)}parseIdentifier(){let e="";for(;this.pos<this.input.length&&/[a-zA-Z0-9_]/.test(this.peek());)e+=this.input[this.pos++];return e}matchKeyword(e){return this.input.substr(this.pos,e.length)===e&&(this.pos+=e.length,!0)}peek(e=0){return this.input[this.pos+e]}expect(e){if(this.input.substr(this.pos,e.length)!==e)throw new Error(`Expected "${e}" at position ${this.pos}`);this.pos+=e.length}skipWhitespace(){for(;this.pos<this.input.length&&/\s/.test(this.peek());)this.pos++}}function p(e){try{return new h(e).parseValue()}catch(t){throw console.log("Couldn't parse Rust object",e),t}}const l=({json:e})=>(e.hasOwnProperty("extra")&&(e={...e,...JSON.parse(e.extra)}),e.hasOwnProperty("_message")&&e.message.endsWith("messages.accounts.arena.request.Results")?a.default.createElement(r,{data:p(e._message)}):a.default.createElement("span",{color:"red"},"Wrong format: ",JSON.stringify(e)));var u=s.A;export{u as default};